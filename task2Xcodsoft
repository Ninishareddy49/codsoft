import math

# Tic-Tac-Toe Board
board = [" " for _ in range(9)]

# Function to print the board
def print_board():
    print("\n")
    for row in range(3):
        print(" | ".join(board[row * 3:(row + 1) * 3]))
        if row < 2:
            print("-" * 9)
    print("\n")

# Check for a winner
def check_winner():
    win_combinations = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]              # Diagonals
    ]

    for combo in win_combinations:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] != " ":
            return board[combo[0]]
    return None

# Check if the board is full
def is_full():
    return " " not in board

# Minimax algorithm with Alpha-Beta Pruning
def minimax(is_maximizing, alpha, beta):
    winner = check_winner()
    if winner == "O":
        return 1
    elif winner == "X":
        return -1
    elif is_full():
        return 0

    if is_maximizing:
        max_eval = -math.inf
        for i in range(9):
            if board[i] == " ":
                board[i] = "O"
                eval = minimax(False, alpha, beta)
                board[i] = " "
                max_eval = max(max_eval, eval)
                alpha = max(alpha, eval)
                if beta <= alpha:
                    break
        return max_eval
    else:
        min_eval = math.inf
        for i in range(9):
            if board[i] == " ":
                board[i] = "X"
                eval = minimax(True, alpha, beta)
                board[i] = " "
                min_eval = min(min_eval, eval)
                beta = min(beta, eval)
                if beta <= alpha:
                    break
        return min_eval

# AI move using Minimax
def ai_move():
    best_score = -math.inf
    move = -1
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            score = minimax(False, -math.inf, math.inf)
            board[i] = " "
            if score > best_score:
                best_score = score
                move = i
    board[move] = "O"
    print("AI chose position", move + 1)

# Display the rules and welcome message
def display_welcome():
    print("""
    Welcome to Tic-Tac-Toe!
    You are 'X', and the AI is 'O'.
    Enter a number between 1 and 9 to make your move.
    The positions are as follows:

     1 | 2 | 3
    ---------
     4 | 5 | 6
    ---------
     7 | 8 | 9

    Try your best to beat the AI. Good luck!
    """)

# Main Game Loop
def play_game():
    display_welcome()
    print_board()

    while True:
        # Player Move
        try:
            player_move = int(input("Enter your move (1-9): ")) - 1
            if player_move < 0 or player_move >= 9 or board[player_move] != " ":
                print("Invalid move. Please choose an empty position between 1 and 9.")
                continue
            board[player_move] = "X"
        except (ValueError, IndexError):
            print("Please enter a valid move (1-9).")
            continue

        print_board()

        # Check for a winner or draw
        if check_winner() == "X":
            print("Congratulations! You win!")
            break
        elif is_full():
            print("It's a draw!")
            break

        # AI Move
        print("AI is making a move...")
        ai_move()
        print_board()

        # Check for a winner or draw
        if check_winner() == "O":
            print("AI wins! Better luck next time.")
            break
        elif is_full():
            print("It's a draw!")
            break

if __name__ == "__main__":
    play_game()
